name: Deploy Crud App

on:
  pull_request:
    branches: [main]

jobs:
  testing-changes:
    runs-on: ubuntu-latest
    name: Build/Test
    steps:
      - uses: actions/checkout@v3

      - name: NPM - Install dependencies
        if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
        run: 'npm install'

      - name: Run Tests
        run: |
          npm run test

  build-mjs-layers:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    name: Build Mjs Layer
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v3

      - run: |
          npm install --production
          mkdir nodejs
          mv node_modules nodejs
          apt update -y && apt install zip -y
          zip -r nodejs.zip nodejs/

      - uses: actions/upload-artifact@v3
        with:
          name: nodejsdpn
          path: nodejs.zip

  deploy-env:
    name: Deploy Lambda
    runs-on: ubuntu-latest
    needs: [testing-changes, build-mjs-layers]
    steps:
      - uses: actions/checkout@v3

      - name: NPM - Load cached venv
        id: cached-npm-dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: NPM - Install dependencies
        if: steps.cached-npm-dependencies.outputs.cache-hit != 'true'
        run: 'npm install'

      - uses: actions/download-artifact@v3
        with:
          name: nodejsdpn
          path: app/

      - name: Deploy using sls
        run: 'npx sls deploy'
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Your SLS App was deployed!
            Awesome :D
        env:
          ACTIONS_PAT: ${{ secrets.SECRET_PAT_GIT }}
